


# Configuration de Spring Cloud Gateway
# Activation de la localisation de service par discovery
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# Configuration des routes
# Route pour le service utilisateur
spring.cloud.gateway.routes[0].id=service1
spring.cloud.gateway.routes[0].uri=http://localhost:9001
spring.cloud.gateway.routes[0].predicates[0]=Path=/microservice-produits/**
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1
spring.cloud.gateway.routes[0].filters[1]=RewritePath=/api/users/(?<path>.*), /$\{path}

# Route pour le service produit
spring.cloud.gateway.routes[1].id=product-service
spring.cloud.gateway.routes[1].uri=lb://PRODUCT-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/products/**
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1

# Route pour le service commande
spring.cloud.gateway.routes[2].id=order-service
spring.cloud.gateway.routes[2].uri=lb://ORDER-SERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/orders/**
spring.cloud.gateway.routes[2].filters[0]=StripPrefix=1

# Configuration d'Eureka Client
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${random.uuid}

# Configuration de Spring Boot Actuator
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.gateway.enabled=true

# Configuration des timeouts
spring.cloud.gateway.httpclient.connect-timeout=5000
spring.cloud.gateway.httpclient.response-timeout=5000

# Configuration du circuit breaker (si Resilience4J est utilisé)
resilience4j.circuitbreaker.instances.default.sliding-window-size=10
resilience4j.circuitbreaker.instances.default.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.default.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.default.wait-duration-in-open-state=10000
resilience4j.circuitbreaker.instances.default.permitted-number-of-calls-in-half-open-state=5

resilience4j.timelimiter.instances.default.timeout-duration=3000

# Configuration des limites de taux (rate limiting)
spring.cloud.gateway.filter.request-rate-limiter.deny-empty-key=false
spring.cloud.gateway.filter.request-rate-limiter.empty-key-status-code=429

# Configuration des CORS
spring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping=true
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origins=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].max-age=3600

# Configuration du SSL (si nécessaire)
# server.ssl.key-store=classpath:keystore.p12
# server.ssl.key-store-password=password
# server.ssl.key-store-type=PKCS12
# server.ssl.key-alias=tomcat

# Configuration de la journalisation
logging.level.root=INFO
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.org.springframework.web=INFO
logging.level.reactor.netty=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Configuration du fallback
spring.cloud.gateway.default-filters[0]=DedupeResponseHeader=Access-Control-Allow-Origin
spring.cloud.gateway.default-filters[1]=DedupeResponseHeader=Access-Control-Allow-Credentials

# Configuration supplémentaire pour les métriques
management.metrics.export.prometheus.enabled=true
management.metrics.tags.application=${spring.application.name}
